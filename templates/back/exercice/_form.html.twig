<style>
	{% block stylesheet %}

		.form-container {
			width: 700px;
			padding: 20px;
			border: 1px solid #ccc;
			border-radius: 10px;
			box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
			margin: 20px auto 80px;
		}

		.form-container label {
			margin-bottom: 5px;
		}

		.form-container .form-control {
			width: 100%;
			box-sizing: border-box;
			margin-bottom: 10px;
		}

		.form-container button {
			width: 100%;
		}
		.label-container {
			display: inline-block;
			margin-right: 20px; /* Adjust as needed for spacing */
		}
		.captcha {
			margin: 15px 0;
		}

		.captcha .preview {
			color: #555;
			width: 100%;
			text-align: center;
			height: 40px;
			line-height: 40px;
			letter-spacing: 8px;
			border: 1px dashed #888;
			font-family: "monospace";
			user-select: none;
			/* disable selection */
		}

		.captcha .preview span {
			display: inline-block;
		}

		.captcha .captcha-form {
			display: flex;
			align-items: center;
			justify-content: space-between;
			margin-top: 10px;
		}

		.captcha .captcha-form input {
			width: 100%;
			padding: 8px;
			border: 1px solid #888;
		}

		.captcha .captcha-form .captcha-refresh {
			width: 40px;
			height: 41.6px;
			border: none;
			outline: none;
			background: #888;
			color: #eee;
			cursor: pointer;
		}

	{% endblock %}

</style>

<div class="form-container">

	{{ form_start(form, {'method': 'POST', 'attr': {'novalidate': 'novalidate'}}) }}
	<div class="mb-3">
		<label for="{{ form.nomExercice.vars.id }}">Exercice Name</label>
		{{ form_widget(form.nomExercice) }}
		{{ form_errors(form.nomExercice) }}

	</div>
	<div class="mb-3">
		<label for="{{ form.DifficulteExercice.vars.id }}">Exercice Difficuly</label>
		{{ form_widget(form.DifficulteExercice) }}
	</div>
	<div class="mb-3">
		<label for="{{ form.Muscle.vars.id }}">Muscle worked</label>
		{{ form_widget(form.Muscle) }}
	</div>
	<div class="mb-3">
		<label for="{{ form.Demonstration.vars.id }}">Image</label>
		{{ form_widget(form.Demonstration , {'attr': {'class': 'form-control' }}) }}
		{{ form_errors(form.Demonstration) }}

	</div>
	<div class="mb-3">
		<label for="{{ form.Video.vars.id }}">Video</label>
		{{ form_widget(form.Video , {'attr': {'class': 'form-control' }}) }}
		{{ form_errors(form.Video) }}

	</div>
	<div class="captcha">
		<label for="captcha-input">Enter Captcha</label>
		<div class="preview" id="captcha-container"></div>
		<div class="captcha-form">


			<input type="text" id="word-input" name="word-input" placeholder="Enter captcha text" required>
			<button class="captcha-refresh" type="button" onclick="refreshCaptcha();">
				<i class="fa fa-refresh"></i>
			</button>
		</div>
	</div>
	<span id="error-message" style="color:red;"></span>


	<button type="submit" class="btn btn-info">{{ button_label|default('Save') }}</button>
	{{ form_end(form) }}
</div>
{% block js %}
	<script>

		document.addEventListener('DOMContentLoaded', function () {
generateCaptcha();
setCaptcha();
});
const fonts = ["cursive", "sans-serif", "serif", "monospace"];
let captchaValue = "";

function generateCaptcha() {
let value = btoa(Math.random() * 1000000000);
value = value.substr(0, 5 + Math.random() * 5);
captchaValue = value;
}

function setCaptcha() {
const captchaContainer = document.getElementById("captcha-container");
let html = captchaValue.split("").map((char) => {
const rotate = -20 + Math.trunc(Math.random() * 30);
const font = Math.trunc(Math.random() * fonts.length);
const color = getRandomColor();
return `<span 
            style="
              transform:rotate(${rotate}deg);
              font-family:${
fonts[font]
};
              color:${color};
            "
          >${char}</span>`;
}).join("");
captchaContainer.innerHTML = html;
}


function getRandomColor() {
const letters = '0123456789ABCDEF';
let color = '#';
for (let i = 0; i < 6; i++) {
color += letters[Math.floor(Math.random() * 16)];
}
return color;
}
let inputCaptchaValue = document.querySelector(".captcha input").value;
function validateInput1() {
const input = document.getElementById("word-input");
const errorMessage = document.getElementById("error-message");
const word = captchaValue;

if (input.value.trim() === word.trim()) {
errorMessage.textContent = "";
return true;
} else {
errorMessage.textContent = "The word you entered does not match the generated word.";
return false;
}
}

function refreshCaptcha() {
generateCaptcha();
setCaptcha();
}
	</script>
	<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
{% endblock %}
